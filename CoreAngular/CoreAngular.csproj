<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>pessoa-pp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.1.2" PrivateAssets="All" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.1.1" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.1.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="pessoa-pp\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="pessoa-pp\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Remove="pessoa-pp\**" />
    <None Remove="pessoa-pp\**" />
  </ItemGroup>

  <ItemGroup>
    <Content Remove="pessoa-pp\proxyconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="pessoa-pp\angular.json" />
    <Content Include="pessoa-pp\e2e\tsconfig.e2e.json" />
    <Content Include="pessoa-pp\package-lock.json" />
    <Content Include="pessoa-pp\package.json" />
    <Content Include="pessoa-pp\src\app\app.component.css" />
    <Content Include="pessoa-pp\src\app\app.component.html" />
    <Content Include="pessoa-pp\src\app\modal-component.html" />
    <Content Include="pessoa-pp\src\app\modal-content.html" />
    <Content Include="pessoa-pp\src\favicon.ico" />
    <Content Include="pessoa-pp\src\index.html" />
    <Content Include="pessoa-pp\src\styles.css" />
    <Content Include="pessoa-pp\src\tsconfig.app.json" />
    <Content Include="pessoa-pp\src\tsconfig.spec.json" />
    <Content Include="pessoa-pp\src\tslint.json" />
    <Content Include="pessoa-pp\tsconfig.json" />
    <Content Include="pessoa-pp\tslint.json" />
  </ItemGroup>

  <ItemGroup>
    <None Include="pessoa-pp\.editorconfig" />
    <None Include="pessoa-pp\.gitignore" />
    <None Include="pessoa-pp\e2e\protractor.conf.js" />
    <None Include="pessoa-pp\README.md" />
    <None Include="pessoa-pp\src\assets\.gitkeep" />
    <None Include="pessoa-pp\src\browserslist" />
    <None Include="pessoa-pp\src\karma.conf.js" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="pessoa-pp\e2e\src\app.e2e-spec.ts" />
    <TypeScriptCompile Include="pessoa-pp\e2e\src\app.po.ts" />
    <TypeScriptCompile Include="pessoa-pp\proxyconfig.json" />
    <TypeScriptCompile Include="pessoa-pp\src\app\app-routing.module.ts" />
    <TypeScriptCompile Include="pessoa-pp\src\app\app.component.spec.ts" />
    <TypeScriptCompile Include="pessoa-pp\src\app\app.component.ts" />
    <TypeScriptCompile Include="pessoa-pp\src\app\app.module.ts" />
    <TypeScriptCompile Include="pessoa-pp\src\app\modal-component.ts" />
    <TypeScriptCompile Include="pessoa-pp\src\app\Modal\Usuario.ts" />
    <TypeScriptCompile Include="pessoa-pp\src\environments\environment.prod.ts" />
    <TypeScriptCompile Include="pessoa-pp\src\environments\environment.ts" />
    <TypeScriptCompile Include="pessoa-pp\src\main.ts" />
    <TypeScriptCompile Include="pessoa-pp\src\polyfills.ts" />
    <TypeScriptCompile Include="pessoa-pp\src\test.ts" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
